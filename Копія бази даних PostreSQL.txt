Для створення копії бази даних PostgreSQL без з'єднаних файлів для тестування, дотримуйтесь наступних кроків. Цей процес дозволяє уникнути пошкодження працюючої бази даних.

## Кроки для резервного копіювання бази даних

1. **Використання pg_dump**:
   - Найбільш поширений спосіб створення резервної копії бази даних у PostgreSQL — це використання утиліти `pg_dump`. Ця команда створює логічну резервну копію бази даних у текстовому форматі.
   - Використовуйте наступну команду в терміналі:
     ```bash
     pg_dump -U ваш_користувач -F c -b -v -f "backup_file.backup" ваша_база_даних
     ```
     - `-U` — ім'я користувача.
     - `-F c` — формат резервної копії (в даному випадку, кастомний).
     - `-b` — включити великі об'єкти.
     - `-v` — детальний режим.
     - `-f` — вказує файл, куди буде збережена резервна копія.

2. **Створення нової бази даних для тестування**:
   - Після створення резервної копії, ви можете створити нову базу даних для тестування:
     ```bash
     createdb нова_база_даних
     ```

3. **Відновлення даних у нову базу**:
   - Використовуйте команду `pg_restore`, щоб відновити резервну копію у нову базу даних:
     ```bash
     pg_restore -U ваш_користувач -d нова_база_даних "backup_file.backup"
     ```
   - Переконайтеся, що у вас є необхідні права доступу до нової бази даних.

4. **Налаштування прав доступу**:
   - Після відновлення даних, налаштуйте права доступу для користувачів до нової бази даних, щоб уникнути конфліктів:
     ```sql
     GRANT ALL PRIVILEGES ON DATABASE нова_база_даних TO ваш_користувач;
     ```

## Додаткові рекомендації

- **Переконайтеся, що база не використовується**: Перед початком процесу резервного копіювання рекомендується переконатися, що ніхто не підключений до бази даних, щоб уникнути потенційних конфліктів[1][3].
- **Регулярність резервного копіювання**: Рекомендується регулярно створювати резервні копії для забезпечення безпеки даних[2][5].

Цей процес дозволить вам безпечно створити тестову копію вашої бази даних PostgreSQL без ризику пошкодження основної робочої бази.

Citations:
[1] https://chmil.pp.ua/blog/3/postgresql-docker-15
[2] https://support.microsoft.com/uk-ua/office/%D0%B2%D1%96%D0%B4%D0%B5%D0%BE-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%BD%D0%B5-%D0%BA%D0%BE%D0%BF%D1%96%D1%8E%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F-%D0%B1%D0%B0%D0%B7-%D0%B4%D0%B0%D0%BD%D0%B8%D1%85-176940ee-a5dc-4293-beda-9894768e7c8d
[3] https://foxminded.ua/docker-postgres/
[4] https://dou.ua/forums/topic/43022/
[5] https://www.easyredmine.com/ua/%D0%B2%D1%96%D1%81%D1%82%D1%96-%D0%B2-easy-redmine/%D1%8F%D0%BA-%D0%B7%D1%80%D0%BE%D0%B1%D0%B8%D1%82%D0%B8-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%BD%D1%83-%D0%BA%D0%BE%D0%BF%D1%96%D1%8E-%D0%B0%D0%B1%D0%BE-%D0%B2%D1%96%D0%B4%D0%BD%D0%BE%D0%B2%D0%B8%D1%82%D0%B8-%D0%B2%D0%B0%D1%88%D1%96-%D1%96%D1%81%D0%BD%D1%83%D1%8E%D1%87%D1%96-%D0%B4%D0%B0%D0%BD%D1%96-redmine-
[6] https://alexhost.com/uk/faq/yak-keruvaty-bazamy-danyh-u-postgresql/
[7] https://thehost.ua/ua/wiki/administration/database/postgresql-install
[8] https://pua.radist.cx.ua/articles/postgresql-jak-zrobiti-damp-bazi.html
[9] https://ela.kpi.ua/bitstream/123456789/46193/1/Bazy_danykh_ta_zasoby_upravlinnia_Praktykum.pdf
